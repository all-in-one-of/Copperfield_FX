{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"outp",
				"output_driver"
			],
			[
				"Rea",
				"ReadCount"
			],
			[
				"N",
				"None"
			],
			[
				"Par",
				"ParseError"
			],
			[
				"Error",
				"Errors"
			],
			[
				"byt",
				"bytes"
			],
			[
				"co",
				"command_buff"
			],
			[
				"UT",
				"UTF-8"
			],
			[
				"att",
				"attrib_list"
			],
			[
				"fil",
				"file"
			],
			[
				"de",
				"debug"
			],
			[
				"di",
				"dict_stack"
			],
			[
				"appen",
				"append"
			],
			[
				"li",
				"list_stack"
			],
			[
				"cur_",
				"cur_map"
			],
			[
				"E",
				"Errors"
			],
			[
				"p",
				"print"
			],
			[
				"logg",
				"logger"
			],
			[
				"in",
				"input_stream"
			],
			[
				"par",
				"parser"
			],
			[
				"Bg",
				"ParserBGEO"
			],
			[
				"DETAIL",
				"ray_detail_1"
			],
			[
				"prin",
				"print"
			],
			[
				"read",
				"readWordBinary"
			],
			[
				"lin",
				"line_buf"
			],
			[
				"ifd",
				"ifd_commands"
			],
			[
				"st",
				"string"
			],
			[
				"sc",
				"scene_io_registry"
			],
			[
				"IO",
				"SCN_IFDTranslator"
			],
			[
				"srt",
				"string"
			],
			[
				"SCN",
				"SCN_IOTranslator"
			],
			[
				"io",
				"io_registry"
			],
			[
				"r",
				"return"
			],
			[
				"S",
				"SCN_IOTranslator"
			],
			[
				"R",
				"RendererOpenGL"
			],
			[
				"w",
				"width"
			],
			[
				"scne",
				"scene_files"
			],
			[
				"Ri",
				"Ri_Module"
			],
			[
				"re",
				"renderer"
			],
			[
				"Sce",
				"Scene_Reader"
			],
			[
				"n",
				"name"
			],
			[
				"if",
				"iface"
			],
			[
				"RIB",
				"RIB_File_Interface"
			],
			[
				"file",
				"filename"
			],
			[
				"ri",
				"riDisplay"
			],
			[
				"glam",
				"glman_for_python"
			],
			[
				"a",
				"array_float"
			],
			[
				"arr",
				"array_int"
			],
			[
				"floatn",
				"floatnum"
			],
			[
				"rib_a",
				"rib_attribute_end"
			],
			[
				"line",
				"line_buff"
			],
			[
				"Wo",
				"WorldEnd"
			],
			[
				"W",
				"WorldBegin"
			],
			[
				"Op",
				"Opacity"
			],
			[
				"Fr",
				"Format"
			],
			[
				"flo",
				"floatnum3"
			],
			[
				"float",
				"floatnum"
			],
			[
				"rib",
				"rib_display"
			],
			[
				"floa",
				"floatnum"
			],
			[
				"floatnum",
				"floatnum3"
			],
			[
				"Co",
				"Combine"
			],
			[
				"fl",
				"floatnum"
			],
			[
				"log",
				"logger"
			],
			[
				"nod",
				"node_path"
			],
			[
				"pa",
				"panelMgr2"
			],
			[
				"ma",
				"maximizePanelManager"
			],
			[
				"hi",
				"historyIndex"
			],
			[
				"_",
				"_bgeo_parser"
			],
			[
				"Pa",
				"ParserBGEO"
			],
			[
				"set",
				"setResultsName"
			],
			[
				"sce",
				"scene_parser"
			],
			[
				"do",
				"do_world_end"
			],
			[
				"ray",
				"ray_version"
			],
			[
				"ray_de",
				"ray_detail_1"
			],
			[
				"do_",
				"do_ray_declare"
			],
			[
				"parse",
				"parseString"
			],
			[
				"One",
				"OneOrMore"
			],
			[
				"_re",
				"_renderer"
			],
			[
				"scen",
				"scene_filename"
			],
			[
				"scene",
				"scene_ext"
			],
			[
				"mim",
				"mime_type"
			],
			[
				"des",
				"description"
			],
			[
				"add",
				"add_subparsers"
			],
			[
				"ray_deta",
				"ray_detail_1"
			],
			[
				"HOM",
				"HOM_Point"
			],
			[
				"H",
				"HOM_Point"
			],
			[
				"OP",
				"OP_Node"
			],
			[
				"en",
				"engine"
			],
			[
				"geo",
				"geometry"
			],
			[
				"HOU_",
				"HOU_Vector3"
			],
			[
				"vector",
				"vector3d"
			],
			[
				"vect",
				"vector3d"
			],
			[
				"setPosition_from",
				"Point_setPosition_from_Vector3"
			],
			[
				"inc",
				"include"
			],
			[
				"pare",
				"parent_node"
			],
			[
				"make",
				"make_tuple"
			],
			[
				"geome",
				"geometries"
			],
			[
				"num",
				"numPoints"
			],
			[
				"cre",
				"createPoint"
			],
			[
				"GEo",
				"Geometry_points"
			],
			[
				"Vec",
				"Vector2"
			],
			[
				"VE",
				"Vector2__repr__"
			],
			[
				"export_Vec",
				"export_Vector2"
			],
			[
				"export",
				"export_Geometry"
			],
			[
				"h",
				"h"
			],
			[
				"new",
				"newGeometry"
			],
			[
				"no",
				"no_init"
			],
			[
				"ret",
				"return_value_policy"
			],
			[
				"_registry",
				"_registry_by_mime"
			],
			[
				"__",
				"__base__"
			],
			[
				"box",
				"box_frame"
			],
			[
				"bo",
				"boundingRect"
			],
			[
				"tick",
				"tick_height"
			],
			[
				"evalAs",
				"evalAsString"
			],
			[
				"_p",
				"_pt_index"
			],
			[
				"bui",
				"buildFromSOP"
			],
			[
				"pol",
				"poly_indices"
			],
			[
				"view",
				"views_layout"
			],
			[
				"delete",
				"delete_widgets"
			],
			[
				"vie",
				"viewports"
			],
			[
				"s",
				"self"
			],
			[
				"views",
				"views_layout"
			],
			[
				"clear",
				"clearLayout"
			],
			[
				"share",
				"share_widget"
			],
			[
				"Qt",
				"QtOpenGL"
			],
			[
				"la",
				"layout_name"
			],
			[
				"poly",
				"_poly_count"
			],
			[
				"_po",
				"_poly_count"
			]
		]
	},
	"buffers":
	[
		{
			"file": "bin/copper",
			"settings":
			{
				"buffer_size": 2651,
				"line_ending": "Unix"
			}
		},
		{
			"file": "gui/panels/parameters_panel/parameters_panel.py",
			"settings":
			{
				"buffer_size": 5736,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "gui/main_window.py",
			"settings":
			{
				"buffer_size": 5693,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "copper/shout/parsers/base.py",
			"settings":
			{
				"buffer_size": 3294,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "copper/shout/parsers/rib/parser_rib.py",
			"settings":
			{
				"buffer_size": 4596,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "copper/shout/parsers/ifd/parser_ifd.py",
			"settings":
			{
				"buffer_size": 7255,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "copper/setup.py",
			"settings":
			{
				"buffer_size": 525,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "from distutils.core import setup"
			}
		},
		{
			"file": "copper/shout/parsers/ifd/parser_bgeo.py",
			"settings":
			{
				"buffer_size": 1313,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "copper/shout/shout.py",
			"settings":
			{
				"buffer_size": 3215,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "copper/lib/bson.pyx",
			"settings":
			{
				"buffer_size": 56747,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "copper/lib/ubjson/markers.py",
			"settings":
			{
				"buffer_size": 1230,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "copper/lib/ubjson/decoder.py",
			"settings":
			{
				"buffer_size": 15404,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "copper/shout/parsers/ifd/hgeo.py",
			"settings":
			{
				"buffer_size": 37080,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "copper/shout/drivers/mplay.py",
			"settings":
			{
				"buffer_size": 2273,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "copper/shout/drivers/__init__.py",
			"settings":
			{
				"buffer_size": 25,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "copper/shout/drivers/base.py",
			"settings":
			{
				"buffer_size": 511,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/geometry/untitled.bgeo",
			"settings":
			{
				"buffer_size": 1226,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/mantra/test.ifd",
			"settings":
			{
				"buffer_size": 3738,
				"encoding": "Western (Windows 1252)",
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/mantra/tmp.ifd",
			"settings":
			{
				"buffer_size": 3331,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/mantra/box.asc.ifd",
			"settings":
			{
				"buffer_size": 3596,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 30760 files for \"logging.basicConfig\"\n\n/Users/max/dev/Copperfield_FX/bin/copper:\n   35  if __name__ == '__main__':\n   36      \"\"\"Main program. Sets up logging and do some work.\"\"\"\n   37:     logging.basicConfig(stream=sys.stderr, level=logging.DEBUG,\n   38                          format='%(name)s (%(levelname)s): %(message)s')\n   39  \n\n/Users/max/dev/Copperfield_FX/copper/shout/shout.py:\n   42  \n   43  \targs, unknown = parser.parse_known_args()\n   44: \tlogging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)\n   45  \n   46  \tscene_ext = None\n\n/Users/max/dev/Copperfield_FX/virtualenv/bin/pilfile.py:\n   63          logging_level = \"DEBUG\"\n   64  \n   65: logging.basicConfig(level=logging_level)\n   66  \n   67  \n\n/Users/max/dev/Copperfield_FX/virtualenv/lib/python2.7/site-packages/OpenGL/__init__.py:\n  123  \n  124          You will need to have a  logging configuration (e.g.\n  125:             logging.basicConfig()\n  126          ) call  in your top-level script to see the results of the\n  127          logging.\n\n/Users/max/dev/Copperfield_FX/virtualenv/lib/python2.7/site-packages/OpenGL/GLES2/shaders.py:\n   10  \"\"\"\n   11  import logging\n   12: logging.basicConfig()\n   13  log = logging.getLogger( __name__ )\n   14  from OpenGL.GLES2 import *\n\n/Users/max/dev/Copperfield_FX/virtualenv3/lib/python3.6/site-packages/OpenGL/__init__.py:\n  123  \n  124          You will need to have a  logging configuration (e.g.\n  125:             logging.basicConfig()\n  126          ) call  in your top-level script to see the results of the\n  127          logging.\n\n/Users/max/dev/Copperfield_FX/virtualenv3/lib/python3.6/site-packages/OpenGL/GLES2/shaders.py:\n   10  \"\"\"\n   11  import logging\n   12: logging.basicConfig()\n   13  log = logging.getLogger( __name__ )\n   14  from OpenGL.GLES2 import *\n\n7 matches across 7 files\n",
			"settings":
			{
				"buffer_size": 1853,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 199.0,
		"history":
		[
			"h",
			"help",
			"exit()",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/max/dev/Copperfield_FX",
		"/Users/max/dev/Copperfield_FX/bin",
		"/Users/max/dev/Copperfield_FX/copper",
		"/Users/max/dev/Copperfield_FX/copper/geometry",
		"/Users/max/dev/Copperfield_FX/copper/geometry/iotranslators",
		"/Users/max/dev/Copperfield_FX/copper/geometry/iotranslators/bgeo",
		"/Users/max/dev/Copperfield_FX/copper/geometry/iotranslators/obj",
		"/Users/max/dev/Copperfield_FX/copper/lib",
		"/Users/max/dev/Copperfield_FX/copper/shout",
		"/Users/max/dev/Copperfield_FX/copper/shout/drivers",
		"/Users/max/dev/Copperfield_FX/copper/shout/parsers",
		"/Users/max/dev/Copperfield_FX/copper/shout/parsers/ifd",
		"/Users/max/dev/Copperfield_FX/copper/shout/parsers/rib",
		"/Users/max/dev/Copperfield_FX/gui",
		"/Users/max/dev/Copperfield_FX/gui/panels",
		"/Users/max/dev/Copperfield_FX/gui/panels/parameters_panel"
	],
	"file_history":
	[
		"/Users/max/dev/Copperfield_FX/test/mantra/tmp.ifd",
		"/Users/max/dev/Copperfield_FX/copper/lib/bson.pyx",
		"/Users/max/dev/Copperfield_FX/copper/lib/bson.pxd",
		"/Users/max/dev/Copperfield_FX/copper/lib/bson.pyx.dev",
		"/Users/max/dev/Copperfield_FX/copper/lib/bson.pyx.old",
		"/Users/max/dev/Copperfield_FX/copper/shout/parsers/ifd/binary_json.py",
		"/Users/max/dev/Copperfield_FX/test/mantra/hipoly.ifd",
		"/Users/max/dev/Copperfield_FX/test/mantra/simple.ifd",
		"/Users/max/dev/shout/src/shout_lib/utils.cpp",
		"/Users/max/dev/shout/src/shout_lib/utils.h",
		"/Users/max/dev/shout/src/shout_cmd/shout_cmd.cpp",
		"/Users/max/dev/shout/src/shout_lib/renderer_opengl.cpp",
		"/Users/max/dev/shout/src/shout_lib/SCN/SCN_Scene.h",
		"/Users/max/dev/shout/src/copper_lib/SYS/SYS_Types.h",
		"/Users/max/dev/shout/src/copper_lib/SYS/SYS_Compiler.h",
		"/Users/max/dev/shout/src/shout_lib/SCN/SCN_IORegistry.h",
		"/Users/max/dev/shout/src/shout_lib/SCN/SCN_IORegistry.cpp",
		"/Users/max/dev/shout/src/shout_lib/SCN/SCN_Scene.cpp",
		"/Users/max/dev/shout/src/shout_lib/display.cpp",
		"/Users/max/dev/shout/CMakeLists.txt",
		"/Users/max/dev/shout/src/shout_lib/CMakeLists.txt",
		"/Users/max/dev/shout/src/shout_lib/renderer.cpp",
		"/Users/max/dev/shout/src/shout_cmd/CMakeLists.txt",
		"/Users/max/dev/shout/src/shout_lib/SCN/SCN_IOTranslator.h",
		"/Users/max/dev/shout/src/shout_lib/SCN/SCN_IOTranslator.cpp",
		"/Users/max/dev/shout/src/shout_lib/SCN/SCN_IFDTranslator.h",
		"/Users/max/dev/shout/src/shout_lib/SCN/SCN_IFDTranslator.cpp",
		"/Users/max/dev/Copperfield_FX/bin/copper",
		"/Users/max/dev/Copperfield_FX/gui/main_window.py",
		"/Users/max/dev/Copperfield_FX/gui/panels/scene_view_panel/scene_view_panel.py",
		"/Users/max/dev/Copperfield_FX/copper/geometry/geometry.py",
		"/Users/max/dev/shout/src/display_sdl.h",
		"/Users/max/dev/shout/src/display_sdl.cpp",
		"/Users/max/dev/shout/cmake/ExternalAntlr4Cpp.cmake",
		"/Users/max/dev/glman/CMakeLists.txt",
		"/Users/max/dev/glman/src/glman_lib/CMakeLists.txt",
		"/Users/max/dev/glman/src/glman_cmd/CMakeLists.txt",
		"/Users/max/dev/glman/src/glman_for_python/CMakeLists.txt",
		"/Users/max/dev/shout/src/CMakeLists.txt",
		"/Users/max/dev/shout/src/shout_lib/display.h",
		"/Users/max/dev/glman/src/glman_lib/loaders/rib_loader.cpp",
		"/Users/max/dev/shout/src/shout.cpp",
		"/Users/max/dev/glman/src/glman_cmd/glman_cmd.cpp",
		"/Users/max/Downloads/IFDLexer.h",
		"/Users/max/Downloads/IFDVisitor.h",
		"/Users/max/Downloads/IFDBaseVisitor.h",
		"/Users/max/Downloads/IFDParser.h",
		"/Users/max/dev/glman/tests/scenes/test.ifd",
		"/Users/max/dev/nexen/src/rop/CMakeLists.txt",
		"/Users/max/dev/nexen/src/rop/rop_nxn.cpp",
		"/Users/max/dev/nexen/CMakeLists.txt",
		"/Users/max/dev/nexen/src/rop/rop_nxn.h",
		"/Users/max/dev/glman/src/glman_lib/parsers/rib_parser.h",
		"/Users/max/dev/glman/src/glman_lib/renderer.cpp",
		"/Users/max/dev/glman/src/glman_lib/display.cpp",
		"/Users/max/dev/glman/include/glman_lib/interfaces/rib_file_interface.h",
		"/Users/max/dev/glman/include/glman_lib/interfaces/rib_rendering_interface.h",
		"/Users/max/dev/glman/src/glman_for_python/RiModule.cpp",
		"/Users/max/dev/glman/src/glman_for_python/glman_for_python.cpp",
		"/Users/max/dev/glman/src/glman_lib/Renderer.cpp",
		"/Users/max/dev/glman/src/glman_lib/Display.cpp",
		"/Users/max/dev/glman/src/glman_lib/interfaces/ifd_interface.cpp",
		"/Users/max/dev/glman/include/glman/loaders/rib_loader.h",
		"/Users/max/dev/glman/src/glman_lib/RIB_Rendering_Interface.cpp",
		"/Users/max/dev/glman/notes",
		"/Users/max/dev/glman/tests/scenes/pacman.rib",
		"/Users/max/dev/glman/include/glman/Display.h",
		"/Users/max/dev/glman/include/glman/RIB_Rendering_Interface.h",
		"/Users/max/dev/glman/src/glman_lib/IFD_Interface.cpp",
		"/Users/max/dev/glman/include/glman/IFD_Interface.h",
		"/Users/max/dev/glman/include/glman/RIB_File_Interface.h",
		"/Users/max/dev/glman/src/glman_lib/RIB_File_Interface.cpp",
		"/Users/max/dev/Copperfield_FX/test/mantra/test.rib",
		"/Users/max/dev/glman/include/glman/Scene_Reader.h",
		"/Users/max/dev/glman/src/glman_lib/Scene_Reader.cpp",
		"/Users/max/dev/CopperFX/src/copper_pymodule/HOM_Geometry.cpp",
		"/Users/max/dev/CopperFX/src/copper_pymodule/HOM_Module.cpp",
		"/Users/max/dev/CopperFX/include/copper/HOM/HOM_Module.h",
		"/Users/max/dev/CopperFX/src/copper_pymodule/HOM_Node.cpp",
		"/Users/max/dev/CopperFX/include/copper/HOM/HOM_Node.h",
		"/Users/max/dev/glman/include/glman/Renderer.h",
		"/Users/max/dev/glman/include/glman/ri.h",
		"/Users/max/dev/glman/python/glman_for_python/prman.py",
		"/Users/max/dev/CopperFX/CMakeLists.txt",
		"/Users/max/dev/glman/include/glman/RibInterface.h",
		"/Users/max/dev/glman/src/glman_lib/RibInterface.cpp",
		"/Users/max/Downloads/patch-FindBoost.cmake",
		"/Users/max/dev/Copperfield_FX/copper/shout/parsers/ifd/parser_ifd.py",
		"/Users/max/dev/Copperfield_FX/test/mantra/cornell-box.rib",
		"/Users/max/dev/Copperfield_FX/copper/shout/parsers/rib/parser_rib.py",
		"/Users/max/dev/Copperfield_FX/copper/shout/parsers/base.py",
		"/Users/max/dev/Copperfield_FX/copper/shout/shout.py",
		"/Users/max/Downloads/gaffer-0.48.0.0-osx/startup/gui/viewer.py",
		"/Users/max/Downloads/gaffer-0.48.0.0-osx/apps/gui/gui-1.py",
		"/Users/max/Downloads/gaffer-0.48.0.0-osx/bin/gaffer.py",
		"/Users/max/Downloads/gaffer-0.48.0.0-osx/bin/gaffer",
		"/Users/max/Downloads/EFI/CLOVER/config.plist",
		"/Users/max/Documents/stor1.htzr.s4account",
		"/Users/max/htzr.ovpn",
		"/Users/max/htzr_hosta01.ovpn",
		"/Users/max/htzr_stor1.ovpn",
		"/Users/max/dev/Copperfield_FX/test/mantra/test.ifd",
		"/Users/max/dev/Copperfield_FX/gui/panels/network_view_panel.py",
		"/Users/max/dev/Copperfield_FX/copper/shout/parsers/ifd/parser_bgeo.py",
		"/Users/max/dev/Copperfield_FX/copper/op/op_network.py",
		"/Users/max/dev/Copperfield_FX/copper/vmath/vector3.py",
		"/Users/max/dev/Copperfield_FX/gui/panels/tree_view_panel.py",
		"/Users/max/dev/Copperfield_FX/gui/panels/scene_view_panel/ogl_objcache.py",
		"/Users/max/dev/Copperfield_FX/gui/panels/parameters_panel/parameters_widgets.py",
		"/Users/max/dev/Copperfield_FX/gui/panels/parameters_panel/parameters_panel.py",
		"/Users/max/dev/Copperfield_FX/gui/widgets/path_bar_widget.py",
		"/Users/max/dev/Copperfield_FX/gui/panels/composite_view_panel.py",
		"/Users/max/dev/Copperfield_FX/copper/op/op_cooking_queue.py",
		"/Users/max/dev/Copperfield_FX/copper/op/op_base.py",
		"/Users/max/dev/Copperfield_FX/copper/op/base.py",
		"/Users/max/dev/Copperfield_FX/gui/panels/python_shell_panel.py",
		"/Users/max/dev/Copperfield_FX/gui/panels/python_syntax_highlighter.py",
		"/Users/max/dev/Copperfield_FX/gui/tabbed_panel_manager.py",
		"/Users/max/dev/Copperfield_FX/gui/panels/help_browser_panel.py",
		"/Users/max/dev/Copperfield_FX/gui/widgets/collapsable_widget.py",
		"/Users/max/dev/Copperfield_FX/gui/widgets/play_bar_widget/time_line.py",
		"/Users/max/dev/Copperfield_FX/gui/signals.py",
		"/Users/max/dev/Copperfield_FX/gui/widgets/play_bar_widget/play_bar_widget.py",
		"/Users/max/dev/Copperfield_FX/gui/widgets/play_bar_widget/__init__.py",
		"/Users/max/dev/Copperfield_FX/gui/widgets/__init__.py",
		"/Users/max/dev/Copperfield_FX/gui/dialogs/render_node_dialog.py",
		"/Users/max/dev/Copperfield_FX/gui/dialogs/__init__.py",
		"/Users/max/dev/Copperfield_FX/gui/panels/parameters_panel/__init__.py"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			"/Users/max/dev/Copperfield_FX"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"self._token",
			"_binaryToken",
			"Invalid binary token",
			"cdef",
			"self.Token",
			"_rawPageDataToTupleArray",
			"logging.basicConfig"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"self.Token",
			"self._token",
			"        ''' Initialize _jValue '''\n        self.Token = token\n        self.Value = value\n        self.Type = 0\n\n    def event(self, parser, key=False):\n        '''\n            Method invoked to send an event to a Handle.  This invokes the\n            appropriate callback on the handle.\n        '''\n        handle = parser.Handle\n        if self.Token == JID_STRING:\n            if key:\n                return handle.jsonKey(parser, self.Value)\n            return handle.jsonString(parser, self.Value)\n        if self.Token == JID_BOOL:\n            return handle.jsonBool(parser, self.Value)\n        if self.Token in {JID_INT8:1,JID_INT16:1,JID_INT32:1,JID_INT64:1}:\n            return handle.jsonInt(parser, self.Value)\n        if self.Token in {JID_UINT8:1,JID_UINT16:1}:\n            return handle.jsonInt(parser, self.Value)\n        if self.Token in {JID_REAL16:1,JID_REAL32:1,JID_REAL64:1}:\n            return handle.jsonReal(parser, self.Value)\n        if self.Token == JID_MAP_BEGIN:\n            return handle.jsonBeginMap(parser)\n        if self.Token == JID_MAP_END:\n            return handle.jsonEndMap(parser)\n        if self.Token == JID_ARRAY_BEGIN:\n            return handle.jsonBeginArray(parser)\n        if self.Token == JID_ARRAY_END:\n            return handle.jsonEndArray(parser)\n        if self.Token == JID_NULL:\n            return handle.jsonNull(parser)\n        if self.Token == JID_UNIFORM_ARRAY:\n            if self.Type == JID_BOOL:"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "bin/copper",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2651,
						"regions":
						{
						},
						"selection":
						[
							[
								1326,
								1326
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "gui/panels/parameters_panel/parameters_panel.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5736,
						"regions":
						{
						},
						"selection":
						[
							[
								2682,
								2682
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 5.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "gui/main_window.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5693,
						"regions":
						{
						},
						"selection":
						[
							[
								1212,
								1212
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "copper/shout/parsers/base.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3294,
						"regions":
						{
						},
						"selection":
						[
							[
								2275,
								2275
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "copper/shout/parsers/rib/parser_rib.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4596,
						"regions":
						{
						},
						"selection":
						[
							[
								1786,
								1786
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "copper/shout/parsers/ifd/parser_ifd.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7255,
						"regions":
						{
						},
						"selection":
						[
							[
								85,
								85
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "copper/setup.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 525,
						"regions":
						{
						},
						"selection":
						[
							[
								480,
								480
							]
						],
						"settings":
						{
							"auto_name": "from distutils.core import setup",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "copper/shout/parsers/ifd/parser_bgeo.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1313,
						"regions":
						{
						},
						"selection":
						[
							[
								759,
								759
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "copper/shout/shout.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3215,
						"regions":
						{
						},
						"selection":
						[
							[
								2806,
								2806
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "copper/lib/bson.pyx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 56747,
						"regions":
						{
						},
						"selection":
						[
							[
								9321,
								9321
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5494.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "copper/lib/ubjson/markers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1230,
						"regions":
						{
						},
						"selection":
						[
							[
								1041,
								1041
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "copper/lib/ubjson/decoder.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15404,
						"regions":
						{
						},
						"selection":
						[
							[
								14407,
								14407
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "copper/shout/parsers/ifd/hgeo.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37080,
						"regions":
						{
						},
						"selection":
						[
							[
								5045,
								5045
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "copper/shout/drivers/mplay.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2273,
						"regions":
						{
						},
						"selection":
						[
							[
								1262,
								1262
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "copper/shout/drivers/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "copper/shout/drivers/base.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 511,
						"regions":
						{
						},
						"selection":
						[
							[
								204,
								219
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "test/geometry/untitled.bgeo",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1226,
						"regions":
						{
						},
						"selection":
						[
							[
								1,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "test/mantra/test.ifd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3738,
						"regions":
						{
						},
						"selection":
						[
							[
								434,
								435
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "test/mantra/tmp.ifd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3331,
						"regions":
						{
						},
						"selection":
						[
							[
								427,
								427
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "test/mantra/box.asc.ifd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3596,
						"regions":
						{
						},
						"selection":
						[
							[
								668,
								668
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 20,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1853,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										201,
										220
									],
									[
										468,
										487
									],
									[
										690,
										709
									],
									[
										932,
										951
									],
									[
										1187,
										1206
									],
									[
										1472,
										1491
									],
									[
										1728,
										1747
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								218,
								218
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 25.0
	},
	"pinned_build_system": "",
	"project": "copperfield.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 257.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
