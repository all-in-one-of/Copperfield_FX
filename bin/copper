#!/usr/bin/env python3

import sys, os
import argparse
import logging

from PyQt5 import QtWebEngineWidgets, QtWidgets, QtGui, QtCore, Qt


module = sys.modules['__main__'].__file__
logger = logging.getLogger(module)

#os.environ['PYTHONOPTIMIZE'] = "2"
os.environ['PYOPENCL_COMPILER_OUTPUT'] = "1"
os.environ['MESA_GL_VERSION_OVERRIDE'] = "4.5"


def parse_command_line(argv):
    """Parse command line argument. See -h option
    :param argv: arguments on the command line must include caller file name.
    """
    formatter_class = argparse.RawDescriptionHelpFormatter
    parser = argparse.ArgumentParser(description=module,
                                     formatter_class=formatter_class)
    parser.add_argument("-v", "--verbose", dest="verbose_count",
                        action="count", default=0,
                        help="increases log verbosity for each occurence.")
    parser.add_argument('-o', metavar="output",
                        type=argparse.FileType('w'), default=sys.stdout,
                        help="redirect output to a file")
    arguments = parser.parse_args(argv[1:])
    # Sets log level to WARN going more verbose for each new -v.
    logger.setLevel(max(3 - arguments.verbose_count, 0) * 10)
    return arguments


if __name__ == '__main__':
    """Main program. Sets up logging and do some work."""
    logging.basicConfig(stream=sys.stderr, level=logging.DEBUG,
                        format='%(name)s (%(levelname)s): %(message)s')

    try:
        arguments = parse_command_line(sys.argv)
        # Do something with arguments.
    except KeyboardInterrupt:
        logger.error('Program interrupted!')
    finally:
        logging.shutdown()

    QtWidgets.QApplication.setAttribute(Qt.Qt.AA_ShareOpenGLContexts);    
    app = QtWidgets.QApplication(sys.argv)
    QtGui.QFontDatabase.addApplicationFont('media/fonts')
    app.setStyle(QtWidgets.QStyleFactory.create('Plastique'))
    app.setWindowIcon(QtGui.QIcon('gui/icons/copper_icon.png'))

    # Create and display the splash screen
    splash_pix = QtGui.QPixmap('gui/media/splash_screen.png')
    splash = QtWidgets.QSplashScreen(splash_pix, QtCore.Qt.WindowStaysOnTopHint)
    splash.show()
    app.processEvents()

    # Create main window
    from copper.ui.main_window import MainWindow

    window = MainWindow()
    window.load_style()

    # Move main window to desktop center
    desktop = QtWidgets.QApplication.desktop()
    screenWidth = desktop.width()
    screenHeight = desktop.height()
    x = (screenWidth - window.width()) / 2
    y = (screenHeight - window.height()) / 2
    window.move(x, y)

    # Show main window
    window.show()
    splash.finish(window)
    window.raise_()
    window.activateWindow()

    window.open_project(make_test_project=True)

    sys.exit(app.exec_())
